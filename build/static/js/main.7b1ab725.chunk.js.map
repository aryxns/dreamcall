{"version":3,"sources":["firebase.js","components/HomePage.js","components/Main.js","components/Requests.js","components/Book.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","HomePage","loginButton","React","useState","link","setLink","myuser","setMyUser","bio","setBio","cansignin","setCansignIn","showName","setShowName","onClick","db","firestore","username","String","console","log","docData","name","bookings","requests","collection","doc","set","then","store","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","window","location","href","className","provider","auth","TwitterAuthProvider","signInWithPopup","result","additionalUserInfo","get","querySnapshot","tempDoc","docs","map","data","includes","localStorage","setItem","placeholder","onChange","e","target","value","profile","description","displayName","user","catch","error","errorMessage","Main","getItem","setName","eligible","setEligible","userlist","setUserlist","testing","arg","body","source","axios","post","res","arrayUnion","FieldValue","update","sendRequest","useEffect","a","fetchData","getUsers","concat","Requests","setRequests","request","arrayRemove","acceptRequest","denyRequest","Bookings","setBookings","finalbookings","reverse","booking","remove_booking","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b1ab725.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAg5VBWrSZH6meUrgoKhxZhG6NzFVZt4vg\",\r\n  authDomain: \"dream-call-69697.firebaseapp.com\",\r\n  projectId: \"dream-call-69697\",\r\n  storageBucket: \"dream-call-69697.appspot.com\",\r\n  messagingSenderId: \"456653716091\",\r\n  appId: \"1:456653716091:web:67fd5884de10b5176b40de\",\r\n  measurementId: \"G-T0DH4WYHZP\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport ReactNotification from 'react-notifications-component'\r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\n\r\nfunction HomePage() {\r\n    const [link, setLink] = React.useState(\"\")\r\n    const [myuser, setMyUser] = React.useState(\"\")\r\n    const [bio, setBio] = React.useState(\"\")\r\n    const [cansignin, setCansignIn] = React.useState(false)\r\n    const [showName, setShowName] = React.useState(\"\")\r\n    function SignInWithTwitter(){\r\n        var provider = new firebase.auth.TwitterAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then((result) => {\r\n            var bio = (result.additionalUserInfo.profile.description);\r\n            var myuser = (result.additionalUserInfo.username);\r\n            var displayName = (result.user.displayName);\r\n            console.log(myuser, bio, displayName)\r\n            setMyUser(myuser)\r\n            setBio(bio)\r\n            setShowName(displayName)\r\n            localStorage.setItem(\"username\", String(myuser))\r\n        }).catch((error) => {\r\n            // Handle Errors here.\r\n            var errorMessage = error.message;\r\n            console.log(errorMessage)\r\n            // The email of the user's account used.\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            // ...\r\n          }).then(() => setCansignIn(true)).then(\r\n            store.addNotification({\r\n                title: \"Twitter Verified!\",\r\n                message: \"Click GET IN to start calling\",\r\n                type: \"success\",\r\n                insert: \"top\",\r\n                container: \"top-left\",\r\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                dismiss: {\r\n                  duration: 5000,\r\n                  onScreen: true\r\n                }\r\n              })\r\n          )}\r\n    \r\n    function Login() {\r\n        var provider = new firebase.auth.TwitterAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then((result) => {\r\n            const db = firebase.firestore()\r\n            var myuser = (result.additionalUserInfo.username);\r\n            const mydata = db.collection(\"Users\")\r\n            mydata.get().then((querySnapshot) => {\r\n                const tempDoc = querySnapshot.docs.map((doc) => {\r\n                    return doc.data().username\r\n                })\r\n                console.log(tempDoc)\r\n                if (tempDoc.includes(myuser) === true) {\r\n                    localStorage.setItem(\"username\", myuser)\r\n                    window.location.href = \"/home\"\r\n                } else {\r\n                    store.addNotification({\r\n                        title: \"Account Dosen't Exists!\",\r\n                        message: \"Please verify twitter and create an account\",\r\n                        type: \"danger\",\r\n                        insert: \"top\",\r\n                        container: \"top-left\",\r\n                        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                        dismiss: {\r\n                          duration: 5000,\r\n                          onScreen: true\r\n                        }\r\n                      })\r\n                }\r\n            })\r\n            //localStorage.setItem(\"username\", String(myuser))\r\n        })   \r\n    }\r\n\r\n    function CreateAccount() {\r\n        const db = firebase.firestore()\r\n        const username = String(myuser)\r\n        console.log(link)\r\n        console.log(bio)\r\n        console.log(showName)\r\n        var docData = {\r\n            username: username,\r\n            bio: bio,\r\n            name: showName,\r\n            bookings: [],\r\n            requests: [],\r\n            link: link,}\r\n        db.collection(\"Users\").doc(username).set(docData).then(() => console.log(\"Account Done!\")).then(\r\n            store.addNotification({\r\n                title: \"Account Created!\",\r\n                message: \"Redirecting to home page\",\r\n                type: \"success\",\r\n                insert: \"top\",\r\n                container: \"top-left\",\r\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                dismiss: {\r\n                  duration: 5000,\r\n                  onScreen: true\r\n                }\r\n              })\r\n        ).then(window.location.href = \"/home\")\r\n        }\r\n    var loginButton;\r\n    if (cansignin === false) {\r\n    loginButton = null;\r\n    } else {\r\n    loginButton =<button onClick={CreateAccount} className=\"mt-5 ml-10 h-14\"><span className=\"font-bold lowercase p-4 bg-green-400\">GET IN</span></button>;\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <ReactNotification />\r\n        <div className=\"content-start text-white font-mono text-left\">\r\n            <h1 className=\"m-10 text-2xl\"><span className=\"p-2 bg-gray-900\">Dream.Call</span><button onClick={Login} className=\"ml-20 underline text-black\">LOGIN</button></h1>\r\n            <p className=\"ml-10 text-xl  text-black\">asking for meetings over twitter DMs sucks 😡</p>\r\n            <p className=\"ml-10 text-xl  text-black\">if you follow someone and they follow you back, you can send them a meeting request and book a 15-min meeting with them &#128512;</p>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"\">\r\n                <input className=\"ml-10 w-80 h-14 border p-2 text-black\" placeholder=\"calendly link\" onChange={e => setLink(e.target.value)} type=\"link\"></input>\r\n            </div>\r\n            <button onClick={SignInWithTwitter} className=\"mt-5 ml-10 h-14\"><span className=\"font-bold lowercase p-4 bg-blue-400\">verify twitter</span></button>\r\n            {loginButton}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport ReactNotification from 'react-notifications-component'\r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport axios from 'axios';\r\n\r\nfunction Main() {\r\n    const username = localStorage.getItem('username')\r\n    console.log(username)\r\n    const [name, setName] = React.useState(\"\")\r\n    const [eligible, setEligible] = React.useState(\"N\")\r\n    const [userlist, setUserlist] = React.useState([])\r\n    const twitter = \"https://twitter.com/\"\r\n    console.log(eligible)\r\n\r\n    function testing(arg){\r\n      const body = {source: username, target: String(arg)}\r\n      axios.post('https://dcappapi.vercel.app/api/query', body)\r\n      .then(res => {\r\n        if (res.data === \"successful!\") {\r\n          setEligible(\"Y\")\r\n          sendRequest(arg)\r\n        }\r\n      })\r\n    }\r\n\r\n    function sendRequest(arg) {\r\n      if (eligible === \"Y\") {\r\n        const arrayUnion = firebase.firestore.FieldValue.arrayUnion;\r\n        const db = firebase.firestore()\r\n        db.collection(\"Users\").doc(arg).update({\r\n            requests: arrayUnion(username)\r\n        }).then(store.addNotification({\r\n            title: \"Request Sent!\",\r\n            message: \"check your meetings page for updates\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            container: \"top-left\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n              duration: 5000,\r\n              onScreen: true\r\n            }\r\n          }))\r\n      }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const fetchData = async() => {\r\n          const db = firebase.firestore()\r\n          const data = db.collection(\"Users\").doc(username)\r\n          data.get().then(function(doc){setName(doc.data().name)})\r\n        }\r\n        fetchData()\r\n      }, [username])\r\n      React.useEffect(() => {\r\n        const getUsers = async() => {\r\n          const db = firebase.firestore()\r\n          const data = await db.collection(\"Users\").get()\r\n          setUserlist(data.docs.map(doc => doc.data()))\r\n        }\r\n        getUsers()\r\n      }, [])\r\n    return(\r\n        <div>\r\n            <ReactNotification/>\r\n            <div className=\"content-start m-10 text-white font-mono text-left\">\r\n            <a href=\"/home\" className=\"text-2xl\"><span className=\"bg-gray-900 p-2\">Dream Call</span></a>\r\n            </div>\r\n        <div className=\"content-start text-left ml-10\">\r\n            <a href=\"/home\" className=\"text-black text-xl\"><span className=\"bg-gray-100  focus:border-blue-300 p-1\">Home</span></a>\r\n            <a href=\"/requests\" className=\"ml-10 text-black text-xl\"><span className=\"p-1  focus:border-blue-300\">Requests</span></a>\r\n            <a href=\"/bookings\" className=\"ml-10 text-black text-xl\"><span className=\"p-1  focus:border-blue-300\">Bookings</span></a>\r\n        </div>    \r\n        <div className=\"content-start m-10 text-white font-mono text-left\">\r\n            <h1 className=\"mt-10 text-2xl text-black\">Welcome {name}!</h1>\r\n            <p className=\"mt-3 text-black text-lg\">Explore a few profiles below and book your first call today :)</p>\r\n        </div>\r\n        {userlist.map(user => (\r\n          <div>\r\n          <div className=\"p-3 content-start rounded-sm font-mono m-10 mb-0 text-left bg-gray-100 shadow-xl border-2 text-black\">\r\n          <h1 className=\"text-xl\">{user.name} (<a className=\"text-blue-900\" href={twitter.concat(user.username)}>@{user.username}</a>)</h1>\r\n          </div>\r\n            <div className=\"p-3 content-start m-10 mt-0 rounded-sm font-mono text-left bg-gray-100 shadow-xl border-2 text-black\">\r\n                <h1 className=\"text-sm text-gray-900\">{user.bio}</h1>\r\n                <button className=\"mt-3 p-1 focus:border-white-300 border rounded-sm bg-blue-400\" onClick={() => testing(user.username)}><span className=\"text-white\">request call</span></button>\r\n            </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport ReactNotification from 'react-notifications-component'\r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nfunction Requests() {\r\n    const [requests, setRequests] = React.useState([])\r\n    const username = localStorage.getItem('username')\r\n\r\n    function acceptRequest(arg) {\r\n        const arrayRemove = firebase.firestore.FieldValue.arrayRemove;\r\n        const arrayUnion = firebase.firestore.FieldValue.arrayUnion;\r\n        const db = firebase.firestore()\r\n        db.collection(\"Users\").doc(arg).update({\r\n            bookings: arrayUnion(username)\r\n        }).then(db.collection(\"Users\").doc(username).update({\r\n            requests: arrayRemove(arg)\r\n        })).then(store.addNotification({\r\n            title: \"Request Accepted!\",\r\n            message: \"We'll share your calendly link with this user\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            container: \"top-left\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n              duration: 5000,\r\n              onScreen: true\r\n            }\r\n          })).then(fetchData)\r\n    }\r\n\r\n    function denyRequest(arg) {\r\n        const arrayRemove = firebase.firestore.FieldValue.arrayRemove;\r\n        const db = firebase.firestore()\r\n        db.collection(\"Users\").doc(username).update({\r\n            requests: arrayRemove(arg)\r\n        }).then(store.addNotification({\r\n            title: \"Request Denied!\",\r\n            message: \"Don't worry, the requester won't know you denied their call\",\r\n            type: \"danger\",\r\n            insert: \"top\",\r\n            container: \"top-left\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n              duration: 5000,\r\n              onScreen: true\r\n            }\r\n          })).then(fetchData)\r\n    }\r\n\r\n    const fetchData = async() => {\r\n        const db = firebase.firestore()\r\n        const data = db.collection(\"Users\").doc(username)\r\n        data.get().then(function(doc){setRequests(doc.data().requests)})\r\n      }\r\n\r\n    React.useEffect(() => {\r\n        const fetchData = async() => {\r\n          const db = firebase.firestore()\r\n          const data = db.collection(\"Users\").doc(username)\r\n          data.get().then(function(doc){setRequests(doc.data().requests)})\r\n        }\r\n        fetchData()\r\n      }, [username])\r\n    return(\r\n        <div>\r\n            <ReactNotification/>\r\n            <div className=\"content-start m-10 text-white font-mono text-left\">\r\n            <a href=\"/home\" className=\"text-2xl\"><span className=\"bg-gray-900 p-2\">Dream Call</span></a>\r\n            </div>\r\n            <div className=\"content-start font-mono text-left w-100 m-10 ml-10\">\r\n            <a href=\"/home\" className=\"text-black text-xl\"><button className=\"p-1 focus:border-blue-300\">Home</button></a>\r\n            <a href=\"/requests\" className=\"ml-10 text-black text-xl\"><button className=\"bg-gray-100 focus:border-blue-300 rounded-sm p-1\">Requests</button></a>\r\n            <a href=\"/bookings\" className=\"ml-10 text-black text-xl\"><button className=\"p-1 focus:border-blue-300\">Bookings</button></a>\r\n            </div> \r\n            <div className=\"content-start m-10 text-white font-mono text-left\">\r\n            <h1 className=\"mt-10 text-2xl text-black\">Your Requests</h1>\r\n            <p className=\"mt-3 text-black text-sm text-gray-400\">don't see anything here? wait for sometime to receive requests</p>\r\n            </div>\r\n                {requests.map(request => (\r\n                    <div className=\"font-mono m-10 h-48 md:h-20 rounded-sm bg-blue-50 shadow-xl\">\r\n                    <div className=\"content-start text-left float-left\"><h1 className=\"m-3 pt-4 font-bold text-lg\"><span className=\"bg-gray-200 rounded-sm p-0.5\">{request}</span> has requested a call with you!</h1></div>\r\n                    <div className=\"float-right pt-3 m-3\">\r\n                    <button className=\"ml-2 float-left focus:border-blue-300 rounded-sm border-1 text-white shadow-sm bg-green-400 p-2\" onClick={() => acceptRequest(request)}>accept</button>\r\n                    <button className=\"ml-2 float-left focus:border-blue-300 bg-red-400 border-1 rounded-sm shadow-sm shadow-green text-white p-2\" onClick={() => denyRequest(request)}>deny</button>\r\n                    </div>\r\n                    </div>\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Requests;","import React from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nfunction Bookings() {\r\n    const username = localStorage.getItem('username')\r\n    const [bookings, setBookings] = React.useState([])\r\n    //const [link, setLink] = React.useState(\"\")\r\n    const finalbookings = bookings.reverse()\r\n    console.log(finalbookings)\r\n    //console.log(link)\r\n\r\n    function remove_booking(arg) {\r\n        const arrayRemove = firebase.firestore.FieldValue.arrayRemove;\r\n        const db = firebase.firestore()\r\n        db.collection(\"Users\").doc(username).update({\r\n            bookings: arrayRemove(arg)\r\n        }).then(fetchData())\r\n    }\r\n\r\n    function getUserData(arg) {\r\n        const db = firebase.firestore();\r\n        const data = db.collection(\"Users\").doc(arg)\r\n        data.get().then(function(doc){window.location = doc.data().link})\r\n    }\r\n\r\n    const fetchData = async() => {\r\n        const db = firebase.firestore()\r\n        const data = db.collection(\"Users\").doc(username)\r\n        data.get().then(function(doc){setBookings(doc.data().bookings)})\r\n      }\r\n\r\n    React.useEffect(() => {\r\n        const fetchData = async() => {\r\n          const db = firebase.firestore()\r\n          const data = db.collection(\"Users\").doc(username)\r\n          data.get().then(function(doc){setBookings(doc.data().bookings)})\r\n        }\r\n        fetchData()\r\n      }, [username])\r\n    return(\r\n        <div>\r\n            <ReactNotification/>\r\n            <div className=\"content-start m-10 text-white font-mono text-left\">\r\n            <a href=\"/home\" className=\"text-2xl\"><span className=\"bg-gray-900 p-2\">Dream Call</span></a>\r\n            </div>\r\n            <div className=\"content-start text-left w-80 m-10 ml-10\">\r\n            <a href=\"/home\" className=\"text-black text-xl\"><span className=\"p-1 focus:border-blue-300\">Home</span></a>\r\n            <a href=\"/requests\" className=\"ml-10 text-black text-xl\"><span className=\"p-1 focus:border-blue-300\">Requests</span></a>\r\n            <a href=\"/bookings\" className=\"ml-10 text-black text-xl\"><span className=\"bg-gray-100 focus:border-blue-300 p-1\">Bookings</span></a>\r\n            </div> \r\n            <div className=\"content-start text-white font-mono text-left\">\r\n            <h1 className=\"ml-10 text-2xl text-black\">Bookings</h1>\r\n            <p className=\"mt-3 text-black text-sm text-gray-400 ml-10\">When people accept your meeting requests, you'll see links to book meetings on this page.</p>\r\n            </div>\r\n            <div className=\"mt-10 content-start mx-auto text-black font-mono text-left\">\r\n                {finalbookings.map(booking => (\r\n                <div>\r\n                <button className=\"bg-gray-50 mb-10 float-left underline p-2 text-lg ml-10\"><button className=\"underline\" onClick={() => getUserData(booking)}>Yay! <span className=\"text-blue-600\">{booking}</span> has accepted your request, click here to book a meeting</button><button onClick={() => remove_booking(booking)} className=\"ml-5 w-10 float-right text-gray-300\">x</button></button>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bookings;","import './App.css';\nimport HomePage from \"./components/HomePage\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Main from \"./components/Main\";\nimport Requests from \"./components/Requests\";\nimport Bookings from \"./components/Book\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact/>\n        <Route path=\"/home\" component={Main} />\n        <Route path=\"/requests\" component={Requests} />\n        <Route path=\"/bookings\" component={Bookings} />\n      </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}